{"version":3,"sources":["../../src/components/publisher.js"],"names":["Configurable","require","Component","axon","portfinder","module","exports","Publisher","constructor","advertisement","discoveryOptions","sock","types","type","on","startDiscovery","onPort","err","port","bind","server","code","getPort","host","address","publish","topic","data","namespace","emit","oppo"],"mappings":";;AAAA,MAAMA,YAAY,GAAGC,OAAO,CAAC,gBAAD,CAA5B;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,aAAD,CAAzB;;AACA,MAAME,IAAI,GAAGF,OAAO,CAAC,gBAAD,CAApB;;AACA,MAAMG,UAAU,GAAGH,OAAO,CAAC,YAAD,CAA1B;;AAEAI,MAAM,CAACC,OAAP,GAAiB,MAAMC,SAAN,SAAwBP,YAAY,CAACE,SAAD,CAApC,CAAgD;AAC7DM,EAAAA,WAAW,CAACC,aAAD,EAAgBC,gBAAhB,EAAkC;AACzC,UAAMD,aAAN,EAAqBC,gBAArB;AAEA,SAAKC,IAAL,GAAY,IAAIR,IAAI,CAACS,KAAL,CAAW,KAAKC,IAAhB,CAAJ,EAAZ;AACA,SAAKF,IAAL,CAAUA,IAAV,CAAeG,EAAf,CAAkB,MAAlB,EAA0B,MAAM,KAAKC,cAAL,EAAhC;;AAEA,UAAMC,MAAM,GAAG,CAACC,GAAD,EAAMC,IAAN,KAAe;AAC1B,WAAKT,aAAL,CAAmBS,IAAnB,GAA0B,CAACA,IAA3B;AAEA,WAAKP,IAAL,CAAUQ,IAAV,CAAeD,IAAf;AACA,WAAKP,IAAL,CAAUA,IAAV,CAAeS,MAAf,CAAsBN,EAAtB,CAAyB,OAAzB,EAAmCG,GAAD,IAAS;AACvC,YAAIA,GAAG,CAACI,IAAJ,IAAY,YAAhB,EAA8B,MAAMJ,GAAN;AAE9Bb,QAAAA,UAAU,CAACkB,OAAX,CAAmB;AACfC,UAAAA,IAAI,EAAE,KAAKb,gBAAL,CAAsBc,OADb;AAEfN,UAAAA,IAAI,EAAE,KAAKT,aAAL,CAAmBS;AAFV,SAAnB,EAGGF,MAHH;AAIH,OAPD;AAQH,KAZD;;AAcAZ,IAAAA,UAAU,CAACkB,OAAX,CAAmB;AACfC,MAAAA,IAAI,EAAE,KAAKb,gBAAL,CAAsBc,OADb;AAEfN,MAAAA,IAAI,EAAET,aAAa,CAACS;AAFL,KAAnB,EAGGF,MAHH;AAIH;;AAEDS,EAAAA,OAAO,CAACC,KAAD,EAAQC,IAAR,EAAc;AACjB,QAAIC,SAAS,GAAG,EAAhB;;AAEA,QAAI,KAAKnB,aAAL,CAAmBmB,SAAvB,EAAkC;AAC9BA,MAAAA,SAAS,GAAG,KAAKnB,aAAL,CAAmBmB,SAAnB,GAA+B,IAA3C;AACH;;AAEDF,IAAAA,KAAK,GAAG,cAAcE,SAAd,GAA0BF,KAAlC;AACA,SAAKf,IAAL,CAAUkB,IAAV,CAAeH,KAAf,EAAsBC,IAAtB;AACH;;AAED,MAAId,IAAJ,GAAW;AACP,WAAO,aAAP;AACH;;AAED,MAAIiB,IAAJ,GAAW;AACP,WAAO,aAAP;AACH;;AA5C4D,CAAjE","sourcesContent":["const Configurable = require('./configurable');\nconst Component = require('./component');\nconst axon = require('@dashersw/axon');\nconst portfinder = require('portfinder');\n\nmodule.exports = class Publisher extends Configurable(Component) {\n    constructor(advertisement, discoveryOptions) {\n        super(advertisement, discoveryOptions);\n\n        this.sock = new axon.types[this.type]();\n        this.sock.sock.on('bind', () => this.startDiscovery());\n\n        const onPort = (err, port) => {\n            this.advertisement.port = +port;\n\n            this.sock.bind(port);\n            this.sock.sock.server.on('error', (err) => {\n                if (err.code != 'EADDRINUSE') throw err;\n\n                portfinder.getPort({\n                    host: this.discoveryOptions.address,\n                    port: this.advertisement.port,\n                }, onPort);\n            });\n        };\n\n        portfinder.getPort({\n            host: this.discoveryOptions.address,\n            port: advertisement.port,\n        }, onPort);\n    }\n\n    publish(topic, data) {\n        let namespace = '';\n\n        if (this.advertisement.namespace) {\n            namespace = this.advertisement.namespace + '::';\n        }\n\n        topic = 'message::' + namespace + topic;\n        this.sock.emit(topic, data);\n    };\n\n    get type() {\n        return 'pub-emitter';\n    }\n\n    get oppo() {\n        return 'sub-emitter';\n    }\n};\n"],"file":"publisher.js"}